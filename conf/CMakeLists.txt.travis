cmake_minimum_required(VERSION 2.8.7)
project(salvus)

###############################################
# Set all necessary variables here.
# Please only try to edit in this block. If something is
# missing add it.
SET(CMAKE_C_COMPILER /home/travis/petsc/arch-linux2-c-debug/bin/mpicc)
SET(CMAKE_CXX_COMPILER /home/travis/petsc/arch-linux2-c-debug/bin/mpicxx)
SET(PETSC_DIR /home/travis/petsc/arch-linux2-c-debug)
SET(EIGEN_INCLUDE /home/travis/eigen)
###############################################

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")

find_package(MPI REQUIRED)
include_directories(${MPI_INCLUDE_PATH})

link_directories(${PETSC_DIR}/lib)

FILE(GLOB QuadAutoGen src/cxx/Element/HyperCube/Quad/Autogen/*.c)
FILE(GLOB TriAutoGen src/cxx/Element/Simplex/Triangle/Autogen/*.c)

include_directories(
        ${PETSC_DIR}/include/
        ${EIGEN_INCLUDE}
        src/cxx
        src/cxx/Element
        src/cxx/Element/HyperCube
        src/cxx/Element/HyperCube/Quad
        src/cxx/Element/HyperCube/Quad/Autogen
        src/cxx/Element/HyperCube/Hex
        src/cxx/Element/Simplex
        src/cxx/Element/Simplex/Triangle
        src/cxx/Element/Simplex/Triangle/Autogen
        src/cxx/Element/Simplex/Tetrahedron
        src/cxx/Model)

set(SALVUS_SOURCES
        src/cxx/Problem/Problem.cpp
        src/cxx/Problem/NewmarkGeneral.cpp
        src/cxx/Problem/NewmarkTesting.cpp
        src/cxx/Mesh/Mesh.cpp
        src/cxx/Mesh/ElasticNewmark2D.cpp
        src/cxx/Mesh/ScalarNewmark2D.cpp
        src/cxx/Element/Element.cpp
        src/cxx/Element/HyperCube/Quad.cpp
        src/cxx/Element/HyperCube/Quad/Elastic.cpp
        src/cxx/Element/HyperCube/Quad/Acoustic.cpp
        src/cxx/Element/Simplex/Triangle.cpp
        src/cxx/Element/Simplex/Triangle/AcousticTri.cpp
        src/cxx/Model/ExodusModel.cpp
        src/cxx/Utilities/Utilities.cpp
        src/cxx/Utilities/Options.cpp
        src/cxx/Source/Source.cpp
        src/cxx/Utilities/kdtree.c
        ${QuadAutoGen}
        ${TriAutoGen}
        )

add_executable(salvus
        ${SALVUS_SOURCES}
        src/cxx/Main.cpp
        )

add_executable(salvus_test
        ${SALVUS_SOURCES}
        src/cxx/Testing/test_main.cpp
        )

# run `make` (or `make -j5`) to build `salvus` executable
target_link_libraries(salvus petsc exodus netcdf)
# run `make salvus_test` to build testing executable.
target_link_libraries(salvus_test petsc exodus netcdf)
set_target_properties(salvus_test PROPERTIES EXCLUDE_FROM_ALL TRUE) # doesn't get built by `make`